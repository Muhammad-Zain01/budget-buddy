generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int           @id @default(autoincrement())
  name             String        @db.VarChar(100)
  username         String        @db.VarChar(100)
  email            String        @db.VarChar(100)
  password         String        @db.VarChar(100)
  isVerfied        Boolean       @default(false)
  verificationCode String?       @db.VarChar(100)
  profileImage     String?       @db.VarChar(100)
  status           Boolean?      @default(true)
  currency         String?       @default("â‚¨") @db.VarChar(10)
  createdAt        DateTime?     @default(now())
  securityToken    String?       @db.VarChar(255)
  tokenCreatedOn   DateTime?
  Category         Category[]
  Account          Account[]
  Transaction      Transaction[]
  budgets          Budget[]      @relation("UserBudgets")
}

model Category {
  id           Int           @id @default(autoincrement())
  isPrimary    Boolean?      @default(false)
  categoryName String        @db.VarChar(100)
  categoryType CategoryType
  icon         String        @db.VarChar(50)
  status       Boolean       @default(true)
  createdAt    DateTime      @default(now())
  addedBy      User?         @relation(fields: [userId], references: [id])
  userId       Int?
  Transaction  Transaction[]
  budgets      Budget[]      @relation("CategoryBudgets") // Add this line
}

model Account {
  id               Int           @id @default(autoincrement())
  name             String        @db.VarChar(100)
  type             AccountType
  balance          Float         @default(0)
  status           Boolean       @default(true)
  createdAt        DateTime      @default(now())
  addedBy          User          @relation(fields: [userId], references: [id])
  userId           Int
  fromTransactions Transaction[] @relation("FromAccount")
  toTransactions   Transaction[] @relation("ToAccount")
}

model Transaction {
  id          Int             @id @default(autoincrement())
  type        TransactionType
  subType     String?         @db.VarChar(100)
  description String?         @db.VarChar(1000)
  tags        String?         @db.VarChar(1000)
  amount      Float
  createdAt   DateTime        @default(now())
  categoryId  Int?
  fromId      Int?
  toId        Int?
  userId      Int
  category    Category?       @relation(fields: [categoryId], references: [id])
  addedBy     User?           @relation(fields: [userId], references: [id])
  fromAccount Account?        @relation("FromAccount", fields: [fromId], references: [id])
  toAccount   Account?        @relation("ToAccount", fields: [toId], references: [id])
}

model Budget {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  amount      Float
  isRecurring Boolean  @default(false)
  createdAt   DateTime @default(now())
  userId      Int
  categoryId  Int
  addedBy     User     @relation("UserBudgets", fields: [userId], references: [id])
  category    Category @relation("CategoryBudgets", fields: [categoryId], references: [id]) // Update this line
}

enum TransactionType {
  INCOME
  EXPENSE
  TRANSFER
  PEOPLE
}

enum AccountType {
  CASH
  BANK
  PERSON
}

enum CategoryType {
  EXPENSE
  INCOME
}
